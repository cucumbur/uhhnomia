var socket=io();const STATE_JOIN="join",STATE_WAITING="waiting";var globalPlayerName="",Uhhnomia=React.createClass({displayName:"Uhhnomia",getInitialState:function(){return{gameState:STATE_JOIN}},changeGameState:function(e){this.setState({gameState:e})},handleJoinRoomSuccess:function(e){this.setState({initialRoomInfo:e}),this.changeGameState(STATE_WAITING)},handleLeaveRoom:function(){this.changeGameState(STATE_JOIN)},displayGameScreen:function(){switch(this.state.gameState){case STATE_JOIN:return React.createElement(SplashScreen,{onJoinRoomSuccess:this.handleJoinRoomSuccess});case STATE_WAITING:return React.createElement(WaitingScreen,{initialRoomInfo:this.state.initialRoomInfo,onLeaveRoom:this.handleLeaveRoom})}},render:function(){return React.createElement("div",{className:"uhhnomia"},this.displayGameScreen())}}),SplashScreen=React.createClass({displayName:"SplashScreen",componentDidMount:function(){var e=this.props.onJoinRoomSuccess;socket.on("join room success",function(t){e(t)}),socket.on("join room fail",function(){alert("Join room failed (it's probably full)")})},componentWillUnmount:function(){socket.off("join room success"),socket.off("join room fail")},render:function(){return React.createElement("div",{className:"splashScreen"},React.createElement("img",{src:"/assets/images/logo_large.png",id:"splashLogo"}),React.createElement(JoinBox,null))}}),JoinBox=React.createClass({displayName:"JoinBox",handleJoinSubmit:function(e){socket.emit("join room try",e)},render:function(){return React.createElement("div",{className:"joinBox"},React.createElement(JoinForm,{onJoinSubmit:this.handleJoinSubmit}))}}),JoinForm=React.createClass({displayName:"JoinForm",getInitialState:function(){return{userName:"",roomName:""}},handleUserNameChange:function(e){this.setState({userName:e.target.value})},handleRoomNameChange:function(e){this.setState({roomName:e.target.value})},handleSubmit:function(e){e.preventDefault();var t=this.state.userName.trim(),a=this.state.roomName.trim();t&&a&&(globalPlayerName=t,this.props.onJoinSubmit({userName:t,roomName:a}))},render:function(){return React.createElement("form",{className:"joinForm",onSubmit:this.handleSubmit},React.createElement("input",{type:"text",placeholder:"Name",value:this.state.userName,onChange:this.handleUserNameChange}),React.createElement("input",{type:"text",placeholder:"Room",value:this.state.roomName,onChange:this.handleRoomNameChange}),React.createElement("input",{type:"submit",value:"Join"}))}}),WaitingScreen=React.createClass({displayName:"WaitingScreen",getInitialState:function(){var e=this.props.initialRoomInfo;return{roomName:e.name,players:e.players,deckName:e.deck,maxPlayerCount:e.maxPlayers,messages:[]}},componentDidMount:function(){var e=this;socket.on("update room info",function(t){e.setState({roomName:t.name,players:t.players,deckName:t.deck,maxPlayerCount:t.maxPlayers})}),socket.on("player joined room",function(t){e.setState({messages:e.state.messages.concat([t+" joined the room"])}),socket.emit("update room info")}),socket.on("player left room",function(t){e.setState({messages:e.state.messages.concat([t+" left the room"])}),socket.emit("update room info")}),socket.on("chat message",function(t){e.addChatMessage(t)})},componentWillUnmount:function(){socket.off("update room info"),socket.off("player joined room"),socket.off("chat message")},addChatMessage:function(e){this.setState({messages:this.state.messages.concat([e.sentBy+": "+e.text])})},handleLeaveRoom:function(){socket.emit("leave room"),this.props.onLeaveRoom()},render:function(){return React.createElement("div",{className:"waitingScreen"},React.createElement(WaitingTable,{players:this.state.players,maxPlayerCount:this.state.maxPlayerCount,roomName:this.state.roomName,deckName:this.state.deckName,messages:this.state.messages,onChatSubmit:this.addChatMessage,onLeaveRoom:this.handleLeaveRoom}))}}),WaitingTable=React.createClass({displayName:"WaitingTable",render:function(){return React.createElement("table",{className:"waitingTable"},React.createElement("tbody",null,React.createElement("tr",null,React.createElement("td",{colSpan:"2"},"Players (",React.createElement("span",{id:"waitingRoomModal-playercount"},this.props.players.length),"/",React.createElement("span",{id:"waitingRoomModal-maxplayers"},this.props.maxPlayerCount),")"),React.createElement("td",null,"Chat"),React.createElement("td",null,"Deck: ",React.createElement("span",{id:"waitingRoomModal-deck"},this.props.deckName)),React.createElement("td",null,"Room: ",React.createElement("span",{id:"waitingRoomModal-room"},this.props.roomName)),React.createElement("td",null,"âš™")),React.createElement("tr",{id:"waitingRoomModal-mainarea"},React.createElement("td",{colSpan:"2",className:"playerListTd"},React.createElement(PlayerList,{players:this.props.players})),React.createElement(WaitingChat,{messages:this.props.messages})),React.createElement("tr",null,React.createElement("td",null,React.createElement("input",{type:"submit",value:"Leave",onClick:this.props.onLeaveRoom})),React.createElement("td",null,React.createElement("input",{type:"submit",value:"Start"})),React.createElement("td",{colspan:"4"},React.createElement(WaitingForm,{onChatSubmit:this.props.onChatSubmit})))))}}),PlayerList=React.createClass({displayName:"PlayerList",render:function(){var e=this.props.players.map(function(e){return React.createElement("li",null,e)});return React.createElement("ul",{className:"playerList"},e)}}),WaitingChat=React.createClass({displayName:"WaitingChat",render:function(){return React.createElement("td",{colspan:"4",id:"waitingRoomModal-chatarea"},React.createElement(WaitingMessages,{messages:this.props.messages}))}}),WaitingMessages=React.createClass({displayName:"WaitingMessages",render:function(){var e=this.props.messages.map(function(e){return React.createElement("li",null,e)});return React.createElement("ul",{className:"waitingMessages"},e)}}),WaitingForm=React.createClass({displayName:"WaitingForm",getInitialState:function(){return{messageText:""}},handleMessageTextChange:function(e){this.setState({messageText:e.target.value})},handleSubmit:function(e){e.preventDefault();var t=this.state.messageText;t&&(this.setState({messageText:""}),socket.emit("chat message",t),this.props.onChatSubmit({sentBy:globalPlayerName,text:t}))},render:function(){return React.createElement("form",{className:"waitingForm",onSubmit:this.handleSubmit},React.createElement("input",{type:"text",placeholder:"Type here...",value:this.state.messageText,onChange:this.handleMessageTextChange}),React.createElement("input",{type:"submit",value:"Send"}))}});ReactDOM.render(React.createElement(Uhhnomia,null),document.getElementById("container"));